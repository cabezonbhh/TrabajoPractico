<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>